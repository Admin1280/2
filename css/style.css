<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>工程创新实践——造卡丁车</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        
        /* 背景视频容器 - 新增 */
        .video-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            overflow: hidden;
        }
        
        /* 背景视频 - 新增透明度控制 */
        .bg-video {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            min-width: 100%;
            min-height: 100%;
            opacity: 0.7; /* 视频不透明度设置为70% */
            object-fit: cover;
        }
        
        /* 半透明遮罩层 - 新增 */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.1); /* 10%不透明黑色遮罩 */
            z-index: -1;
        }
        
        body {
            color: #333;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }
        
        .card-container {
            position: relative;
            width: 100%;
            height: 100vh;
            perspective: 1000px;
        }
        
        .card {
            position: absolute;
            width: 220px;
            height: 320px;
            left: 50%;
            top: 50%;
            transform-style: preserve-3d;
            transition: all 0.5s cubic-bezier(0.25, 1, 0.5, 1);
            cursor: pointer;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
            font-size: 1.5rem;
            text-align: center;
            padding: 25px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.1));
            backdrop-filter: blur(8px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            opacity: 0.95; /* 卡片默认不透明度95% */
        }
        
        .card:hover {
            transform: translate(-50%, -50%) scale(1.15);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
            opacity: 1; /* 悬停时不透明度100% */
        }
        
        /* 卡片正面和背面 - 新增透明度控制 */
        .card-front, .card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            transition: transform 0.3s;
            opacity: 0.9; /* 正背面不透明度90% */
        }
        
        .card-front {
            background: linear-gradient(135deg, rgba(245, 247, 250, 0.7), rgba(195, 207, 226, 0.7));
        }
        
        .card-back {
            background: rgba(255, 255, 255, 0.85); /* 背面不透明度85% */
            transform: rotateY(180deg);
            color: #333;
        }
        
        /* 日志容器透明度 - 新增 */
        .log-container {
            background: rgba(255, 255, 255, 0.88); /* 88%不透明 */
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        /* 日志条目透明度 - 新增 */
        .log-entry {
            background: rgba(249, 249, 249, 0.9); /* 90%不透明 */
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        /* 控制面板 - 新增 */
        .controls {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.6); /* 60%不透明 */
            padding: 15px;
            border-radius: 10px;
            color: white;
            z-index: 100;
        }
        
        .slider-container {
            margin-bottom: 10px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-size: 14px;
        }
        
        input[type="range"] {
            width: 200px;
        }
    </style>
</head>
<body>
    <!-- 背景视频 - 新增 -->
    <div class="video-background">
        <video autoplay muted loop class="bg-video">
            <source src="assets/videos/background.mp4" type="video/mp4">
        </video>
    </div>
    <div class="overlay"></div>
    
    <!-- 卡片容器 -->
    <div class="card-container" id="cardContainer">
        <!-- 卡片内容保持不变 -->
    </div>
    
    <!-- 控制面板 - 新增 -->
    <div class="controls">
        <div class="slider-container">
            <label for="video-opacity">视频不透明度: <span id="video-opacity-value">40</span>%</label>
            <input type="range" id="video-opacity" min="0" max="100" value="40">
        </div>
        <div class="slider-container">
            <label for="card-opacity">卡片不透明度: <span id="card-opacity-value">95</span>%</label>
            <input type="range" id="card-opacity" min="0" max="100" value="95">
        </div>
    </div>
    
    <script>
        // 获取DOM元素
        const video = document.querySelector('.bg-video');
        const cards = document.querySelectorAll('.card');
        const videoOpacitySlider = document.getElementById('video-opacity');
        const cardOpacitySlider = document.getElementById('card-opacity');
        const videoOpacityValue = document.getElementById('video-opacity-value');
        const cardOpacityValue = document.getElementById('card-opacity-value');
        
        // 视频不透明度控制
        videoOpacitySlider.addEventListener('input', function() {
            const opacity = this.value / 100;
            video.style.opacity = opacity;
            videoOpacityValue.textContent = this.value;
        });
        
        // 卡片不透明度控制
        cardOpacitySlider.addEventListener('input', function() {
            const opacity = this.value / 100;
            cards.forEach(card => {
                card.style.opacity = opacity;
            });
            cardOpacityValue.textContent = this.value;
        });
        
        // 保持原有的卡片动画代码...
    </script>
</body>
</html>